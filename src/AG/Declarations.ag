attr Decls
  syn declsDeps :: {[(GallinaUngroupedDefinition, String, [String])]}

sem Decls
  | Nil
     lhs.declsDeps = []
  | Cons
     lhs.declsDeps = @hd.declsDeps ++ @tl.declsDeps

attr Decl                          
  syn declsDeps :: {[(GallinaUngroupedDefinition, String, [String])]}

{
mkFunDefDecl :: String -> Int -> Maybe GallinaType -> [GallinaMatch] -> GallinaUngroupedDefinition
mkFunDefDecl name arity t ms = GallinaUngroupedFunOrPat . Left $ 
                               GallinaFunctionBody arity name t (GallinaCase mkTerms ms)
  where mkTerms = map (\n -> GallinaVar ('x' : show n)) [0 .. (arity - 1)]

mkPatBindDefDecl :: String -> Maybe GallinaType -> GallinaTerm -> GallinaUngroupedDefinition     
mkPatBindDefDecl name t body = GallinaUngroupedFunOrPat . Right $
                               GallinaPatBindingBody name t body
}

sem Decl
  | DataDecl
     loc.declName = @indName
  | FunBind
     loc.declName = @matches.name
  | PatBind
     loc.declName = @pat.var

sem Decl                     
  | DataDecl 
     lhs.declsDeps = return ( GallinaUngroupedInd $
                              GallinaInductiveBody @declName @params @constrs 
                            , @declName
                            , @dependencies
                            )
  | FunBind
     loc.gallinaDecl = mkFunDefDecl @declName
                                    @matches.arity
                                    Nothing
                                    @matches.gallinaMatches
     lhs.declsDeps = return ( @gallinaDecl 
                            , @declName
                            , @dependencies
                                    )
  | PatBind
     loc.gallinaDecl = mkPatBindDefDecl @declName Nothing (attachBindings @rhs.gallinaTerm @binds.definitions)
     lhs.declsDeps = return ( @gallinaDecl 
                            , @declName
                            , @dependencies
                                    )
-- The following constructors are ignored.
 | TypeDecl TypeFamDecl GDataDecl DataFamDecl TypeInsDecl DataInsDecl 
   GDataInsDecl ClassDecl InstDecl DerivDecl InfixDecl DefaultDecl 
   SpliceDecl TypeSig ForImp ForExp RulePragmaDecl DeprPragmaDecl 
   WarnPragmaDecl InlineSig InlineConlikeSig SpecSig SpecInlineSig 
   InstSig AnnPragma 
     lhs.declsDeps = []
