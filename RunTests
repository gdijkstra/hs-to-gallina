#!/bin/bash

# Run all the tests: convert Haskell file to Coq script. Compile Coq
# script. Compile extracted Haskell code.

pushd tests

echo "Removing all temporary files."
rm -f *.glob *.v *.vo extracted/*

positiveTests="PreludeTest.hs Log.hs Quicksort.hs Notation.hs Coinduction.hs Recursion.hs"
success=0
total=0

for f in $positiveTests
do
    total=$(($total + 1))
    echo "RunTests: running HsToGallina on $f."
    ../dist/build/HsToGallina/HsToGallina -f $f -w
    if [[ $? -eq 0 ]]
    then 
        echo "RunTests: running coqc on" $(basename $f .hs)
        coqc -I ../lib/ $(basename $f .hs).v
        if [[ $? -eq 0 ]]
        then 
            echo "RunTests: coqc run succesfully" 
            sed -i 's/unsafeCoerce :: a -> b//' extracted/$f
            ghc -fno-warn-deprecated-flags -c extracted/$f 
            if [[ $? -eq 0 ]]
            then
                echo "RunTests: ghc compiled extracted code succesfully"
                success=$(($success + 1))
            else
                echo "Error: ghc failed."
            fi
        else echo "Error: coqc failed."
        fi
    else echo "Error: HsToGallina failed on $f."
    fi
done

echo "RunTests: $success / $total tests succeeded."

if (( $success == $total ))
then exit 0
else exit 1
fi

popd
